openapi: 3.0.0
info:
  title: Furniture Store API
  description: API documentation for the Furniture Store project.
  version: "1.0"
  termsOfService: "https://www.example.com/terms/"
  contact:
    email: support@example.com
  license:
    name: MIT License
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: http://127.0.0.1:8000/
    description: Local Development Server

paths:
  /auth/register/:
    post:
      summary: Register a new user
      description: Creates a new user account.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Bad Request

  /auth/login/:
    post:
      summary: User login
      description: Authenticates a user and returns an authentication token.
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Successful login
        "401":
          description: Unauthorized

  /auth/profile/:
    get:
      summary: Get user profile
      description: Returns the authenticated user's profile.
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profile retrieved successfully
        "401":
          description: Unauthorized

  /furniture/:
    get:
      summary: List all furniture items
      description: Retrieves a list of all furniture items.
      operationId: listFurniture
      responses:
        "200":
          description: Successfully retrieved list

    post:
      summary: Create a new furniture item
      description: Adds a new furniture item to the inventory.
      operationId: createFurniture
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, category, price, stock]
              properties:
                name:
                  type: string
                category:
                  type: string
                  enum: ["chair", "sofa", "table", "bed", "cabinet"]
                price:
                  type: number
                stock:
                  type: integer
      responses:
        "201":
          description: Furniture item created
        "400":
          description: Bad request

  /shopping-cart/:
    get:
      summary: View shopping cart
      description: Retrieves all items in the authenticated user's shopping cart.
      operationId: viewShoppingCart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Cart retrieved successfully

    post:
      summary: Add item to shopping cart
      description: Adds an item to the user's shopping cart.
      operationId: addItemToCart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [furniture_id, quantity]
              properties:
                furniture_id:
                  type: integer
                quantity:
                  type: integer
                  minimum: 1
      responses:
        "201":
          description: Item added to cart
        "400":
          description: Bad request

  /checkout/:
    post:
      summary: Checkout and place an order
      description: Processes the checkout by validating the cart, reducing stock, and creating an order.
      operationId: checkout
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [payment_method, address]
              properties:
                payment_method:
                  type: string
                  enum: ["card", "paypal", "cod"]
                address:
                  type: string
      responses:
        "201":
          description: Order placed successfully
        "400":
          description: Bad request

  /order/:
    get:
      summary: Get user orders
      description: Retrieves all past orders of the authenticated user.
      operationId: getOrders
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Orders retrieved successfully

  /order/{order_id}/:
    get:
      summary: Get order details
      description: Retrieves the details of a specific order.
      operationId: getOrderDetails
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order details retrieved successfully
        "404":
          description: Order not found

    post:
      summary: Update order status (Admin only)
      description: Allows an admin to update an order's status.
      operationId: updateOrderStatus
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [status]
              properties:
                status:
                  type: string
                  enum: ["pending", "shipped", "delivered", "cancelled"]
      responses:
        "200":
          description: Order status updated
        "400":
          description: Invalid status
        "403":
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
